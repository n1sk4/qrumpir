name: CMake Multiplatform Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y cmake g++-12 ninja-build
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 60

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake ninja gcc@12
          echo 'export PATH="/usr/local/opt/gcc@12/bin:$PATH"' >> ~/.zshrc
          source ~/.zshrc

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake ninja --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install mingw --version=12.2.0 -y
          setx PATH "%PATH%;C:\Program Files\mingw-w64\bin"

      - name: Create Build Directory
        run: mkdir build

      - name: Configure CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -G Ninja

      - name: Build Project
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Run Tests
        working-directory: build
        run: ctest -C ${{ matrix.build_type }} --output-on-failure

      - name: Upload Build Artifacts (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.build_type }}
          path: build/
